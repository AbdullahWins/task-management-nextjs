{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/inter_59dee874.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"inter_59dee874-module__9CtR0q__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 9, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/inter_59dee874.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,wJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/services/store/modules/api.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { authSlice } from \"./authSlice\";\n\nexport const api = createApi({\n  reducerPath: \"api\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:5000/api/v1\" }),\n  endpoints: (builder) => ({\n    getUser: builder.query({\n      query: (userId) => ({\n        url: `/users/find/${userId}`,\n        method: \"GET\",\n      }),\n      onQueryStarted: async (\n        userId,\n        { dispatch, getState, queryFulfilled }\n      ) => {\n        console.log(\"Calling getUser with userId:\", userId);\n        try {\n          // Wait for the query to be fulfilled\n          const { data } = await queryFulfilled;\n          console.log(\"User data fetched:\", data);\n          // Optionally update the state with fetched user data\n          dispatch(\n            authSlice.actions.signinSuccess({\n              user: data,\n              accessToken: (getState() as any).auth.accessToken,\n            })\n          );\n        } catch (err) {\n          console.error(\"Error fetching user data:\", err);\n        }\n      },\n    }),\n    signup: builder.mutation({\n      query: (data) => ({\n        url: \"/users/signup\",\n        method: \"POST\",\n        body: data,\n      }),\n    }),\n    signin: builder.mutation({\n      query: (data) => ({\n        url: \"/users/signin\",\n        method: \"POST\",\n        body: data,\n      }),\n    }),\n  }),\n});\n\nexport const { useSignupMutation, useSigninMutation } = api;\n"],"names":[],"mappings":";;;;;AACA;AADA;AAAA;;;AAGO,MAAM,MAAM,CAAA,GAAA,kNAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,aAAa;IACb,WAAW,CAAA,GAAA,gLAAA,CAAA,iBAAc,AAAD,EAAE;QAAE,SAAS;IAA+B;IACpE,WAAW,CAAC,UAAY,CAAC;YACvB,SAAS,QAAQ,KAAK,CAAC;gBACrB,OAAO,CAAC,SAAW,CAAC;wBAClB,KAAK,CAAC,YAAY,EAAE,QAAQ;wBAC5B,QAAQ;oBACV,CAAC;gBACD,gBAAgB,OACd,QACA,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE;oBAEtC,QAAQ,GAAG,CAAC,gCAAgC;oBAC5C,IAAI;wBACF,qCAAqC;wBACrC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM;wBACvB,QAAQ,GAAG,CAAC,sBAAsB;wBAClC,qDAAqD;wBACrD,SACE,gJAAA,CAAA,YAAS,CAAC,OAAO,CAAC,aAAa,CAAC;4BAC9B,MAAM;4BACN,aAAa,AAAC,WAAmB,IAAI,CAAC,WAAW;wBACnD;oBAEJ,EAAE,OAAO,KAAK;wBACZ,QAAQ,KAAK,CAAC,6BAA6B;oBAC7C;gBACF;YACF;YACA,QAAQ,QAAQ,QAAQ,CAAC;gBACvB,OAAO,CAAC,OAAS,CAAC;wBAChB,KAAK;wBACL,QAAQ;wBACR,MAAM;oBACR,CAAC;YACH;YACA,QAAQ,QAAQ,QAAQ,CAAC;gBACvB,OAAO,CAAC,OAAS,CAAC;wBAChB,KAAK;wBACL,QAAQ;wBACR,MAAM;oBACR,CAAC;YACH;QACF,CAAC;AACH;AAEO,MAAM,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,GAAG"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/services/store/modules/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { api } from \"./api\";\n\ninterface AuthState {\n  isAuthenticated: boolean;\n  user: null | {\n    _id: string;\n    name: string;\n    email: string;\n    image?: string;\n    username?: string;\n  };\n  accessToken: null | string;\n}\n\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  user: null,\n  accessToken: null,\n};\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    signinSuccess(\n      state,\n      action: PayloadAction<{ user: any; accessToken: string }>\n    ) {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.accessToken = action.payload.accessToken;\n      localStorage.setItem(\"accessToken\", action.payload.accessToken);\n      localStorage.setItem(\"userId\", action.payload.user._id);\n    },\n    hydrateAuth(state, action: PayloadAction<string | null>) {\n      const accessToken = localStorage.getItem(\"accessToken\");\n      if (accessToken) {\n        state.isAuthenticated = true;\n        state.accessToken = accessToken;\n        const userId = localStorage.getItem(\"userId\");\n        if (userId) {\n          console.log(\"Calling getUser with userId:\", userId);\n          api.endpoints.getUser.initiate(userId);\n        }\n        console.log(\"Hydrated auth state:\", state);\n      }\n    },\n    signout(state) {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.accessToken = null;\n      localStorage.removeItem(\"accessToken\");\n    },\n  },\n});\n\nexport const { signinSuccess, signout, hydrateAuth } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"names":[],"mappings":";;;;;;;AACA;AADA;;;AAeA,MAAM,eAA0B;IAC9B,iBAAiB;IACjB,MAAM;IACN,aAAa;AACf;AAEO,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IACnC,MAAM;IACN;IACA,UAAU;QACR,eACE,KAAK,EACL,MAAyD;YAEzD,MAAM,eAAe,GAAG;YACxB,MAAM,IAAI,GAAG,OAAO,OAAO,CAAC,IAAI;YAChC,MAAM,WAAW,GAAG,OAAO,OAAO,CAAC,WAAW;YAC9C,aAAa,OAAO,CAAC,eAAe,OAAO,OAAO,CAAC,WAAW;YAC9D,aAAa,OAAO,CAAC,UAAU,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG;QACxD;QACA,aAAY,KAAK,EAAE,MAAoC;YACrD,MAAM,cAAc,aAAa,OAAO,CAAC;YACzC,IAAI,aAAa;gBACf,MAAM,eAAe,GAAG;gBACxB,MAAM,WAAW,GAAG;gBACpB,MAAM,SAAS,aAAa,OAAO,CAAC;gBACpC,IAAI,QAAQ;oBACV,QAAQ,GAAG,CAAC,gCAAgC;oBAC5C,0IAAA,CAAA,MAAG,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACjC;gBACA,QAAQ,GAAG,CAAC,wBAAwB;YACtC;QACF;QACA,SAAQ,KAAK;YACX,MAAM,eAAe,GAAG;YACxB,MAAM,IAAI,GAAG;YACb,MAAM,WAAW,GAAG;YACpB,aAAa,UAAU,CAAC;QAC1B;IACF;AACF;AAEO,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,UAAU,OAAO;uCAEzD,UAAU,OAAO"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/providers/client-providers.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { api } from \"@/services/api\"; // Adjust the import path based on your file structure\nimport { hydrateAuth } from \"@/services/store/modules/authSlice\"; // Keep your original hydrateAuth if needed\n\nconst HydrateAuth = ({ children }: { children: ReactNode }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    if (userId) {\n      // Directly initiate the query to fetch user data\n      dispatch(api.endpoints.getUser.initiate(userId))\n        .unwrap()\n        .then((data) => {\n          // Once the user data is fetched, you can dispatch it to the auth store\n          dispatch(hydrateAuth(data)); // Assuming hydrateAuth will save user data in state\n        })\n        .catch((error) => {\n          console.error(\"Error fetching user data:\", error);\n        });\n    }\n  }, [dispatch]);\n\n  return <>{children}</>;\n};\n\nexport default HydrateAuth;\n"],"names":[],"mappings":";;;;AAAA;;;;;;AAGA,yPAAkE,2CAA2C;AAF7G;;;;;;AAIA,MAAM,cAAc,CAAC,EAAE,QAAQ,EAA2B;IACxD,MAAM,WAAW,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD;IAE3B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,aAAa,OAAO,CAAC;QACpC,IAAI,QAAQ;YACV,iDAAiD;YACjD,SAAS,IAAI,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,SACrC,MAAM,GACN,IAAI,CAAC,CAAC;gBACL,uEAAuE;gBACvE,SAAS,CAAA,GAAA,gJAAA,CAAA,cAAW,AAAD,EAAE,QAAQ,oDAAoD;YACnF,GACC,KAAK,CAAC,CAAC;gBACN,QAAQ,KAAK,CAAC,6BAA6B;YAC7C;QACJ;IACF,GAAG;QAAC;KAAS;IAEb,qBAAO;kBAAG;;AACZ;uCAEe"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/components/layouts/navbar.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NavBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavBar() from the server but NavBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/layouts/navbar.tsx <module evaluation>\",\n    \"NavBar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,mEACA"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/components/layouts/navbar.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NavBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavBar() from the server but NavBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/layouts/navbar.tsx\",\n    \"NavBar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,+CACA"}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Inter } from \"next/font/google\";\nimport \"./globals.css\";\nimport { ClientProviders } from \"@/providers/client-providers\";\nimport { NavBar } from \"@/components/layouts/navbar\";\n\nconst inter = Inter({ subsets: [\"latin\"] });\n\nexport const metadata: Metadata = {\n  title: \"Todo App\",\n  description: \"A simple todo application\",\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <body className={`${inter.className} min-h-screen`}>\n        <ClientProviders>\n          <>\n            <NavBar />\n            {children}\n          </>\n        </ClientProviders>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAGA;AACA;;;;;;AAIO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YAAK,WAAW,GAAG,yIAAA,CAAA,UAAK,CAAC,SAAS,CAAC,aAAa,CAAC;sBAChD,cAAA,8OAAC,wIAAA,CAAA,kBAAe;0BACd,cAAA;;sCACE,8OAAC,uIAAA,CAAA,SAAM;;;;;wBACN;;;;;;;;;;;;;;;;;;AAMb"}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}