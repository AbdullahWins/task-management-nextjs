{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/inter_59dee874.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"inter_59dee874-module__9CtR0q__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 9, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/inter_59dee874.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,wJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/providers/client-providers.tsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const api = createApi({\n  reducerPath: \"api\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:5000/api/v1\" }),\n  endpoints: (builder) => ({\n    getUser: builder.query({\n      query: (userId) => ({\n        url: `/users/find/${userId}`,\n        method: \"GET\",\n      }),\n      onQueryStarted: async (\n        userId,\n        { dispatch, getState, queryFulfilled }\n      ) => {\n        console.log(\"Calling getUser with userId:\", userId);\n        try {\n          const { data } = await queryFulfilled;\n          console.log(\"User data fetched:\", data);\n          dispatch(\n            authSlice.actions.signinSuccess({\n              user: data,\n              accessToken: (getState() as any).auth.accessToken,\n            })\n          );\n        } catch (err) {\n          console.error(\"Error fetching user data:\", err);\n        }\n      },\n    }),\n    signup: builder.mutation({\n      query: (data) => ({\n        url: \"/users/signup\",\n        method: \"POST\",\n        body: data,\n      }),\n    }),\n    signin: builder.mutation({\n      query: (data) => ({\n        url: \"/users/signin\",\n        method: \"POST\",\n        body: data,\n      }),\n    }),\n  }),\n});\n\nexport const { useSignupMutation, useSigninMutation, useGetUserQuery } = api;\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AAEO,MAAM,MAAM,CAAA,GAAA,kNAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,aAAa;IACb,WAAW,CAAA,GAAA,gLAAA,CAAA,iBAAc,AAAD,EAAE;QAAE,SAAS;IAA+B;IACpE,WAAW,CAAC,UAAY,CAAC;YACvB,SAAS,QAAQ,KAAK,CAAC;gBACrB,OAAO,CAAC,SAAW,CAAC;wBAClB,KAAK,CAAC,YAAY,EAAE,QAAQ;wBAC5B,QAAQ;oBACV,CAAC;gBACD,gBAAgB,OACd,QACA,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE;oBAEtC,QAAQ,GAAG,CAAC,gCAAgC;oBAC5C,IAAI;wBACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM;wBACvB,QAAQ,GAAG,CAAC,sBAAsB;wBAClC,SACE,UAAU,OAAO,CAAC,aAAa,CAAC;4BAC9B,MAAM;4BACN,aAAa,AAAC,WAAmB,IAAI,CAAC,WAAW;wBACnD;oBAEJ,EAAE,OAAO,KAAK;wBACZ,QAAQ,KAAK,CAAC,6BAA6B;oBAC7C;gBACF;YACF;YACA,QAAQ,QAAQ,QAAQ,CAAC;gBACvB,OAAO,CAAC,OAAS,CAAC;wBAChB,KAAK;wBACL,QAAQ;wBACR,MAAM;oBACR,CAAC;YACH;YACA,QAAQ,QAAQ,QAAQ,CAAC;gBACvB,OAAO,CAAC,OAAS,CAAC;wBAChB,KAAK;wBACL,QAAQ;wBACR,MAAM;oBACR,CAAC;YACH;QACF,CAAC;AACH;AAEO,MAAM,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,eAAe,EAAE,GAAG"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/components/layouts/navbar.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NavBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavBar() from the server but NavBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/layouts/navbar.tsx <module evaluation>\",\n    \"NavBar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,mEACA"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/components/layouts/navbar.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NavBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavBar() from the server but NavBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/layouts/navbar.tsx\",\n    \"NavBar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,+CACA"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Inter } from \"next/font/google\";\nimport \"./globals.css\";\nimport { ClientProviders } from \"@/providers/client-providers\";\nimport { NavBar } from \"@/components/layouts/navbar\";\n\nconst inter = Inter({ subsets: [\"latin\"] });\n\nexport const metadata: Metadata = {\n  title: \"Todo App\",\n  description: \"A simple todo application\",\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <body className={`${inter.className} min-h-screen`}>\n        <ClientProviders>\n          <>\n            <NavBar />\n            {children}\n          </>\n        </ClientProviders>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAGA;AACA;;;;;;AAIO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YAAK,WAAW,GAAG,yIAAA,CAAA,UAAK,CAAC,SAAS,CAAC,aAAa,CAAC;sBAChD,cAAA,8OAAC,wIAAA,CAAA,kBAAe;0BACd,cAAA;;sCACE,8OAAC,uIAAA,CAAA,SAAM;;;;;wBACN;;;;;;;;;;;;;;;;;;AAMb"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}