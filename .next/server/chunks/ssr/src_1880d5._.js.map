{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/services/store/modules/taskSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { api } from \"./api\";\n\ninterface Task {\n  _id: string;\n  userId: string;\n  title: string;\n  description: string;\n  dueDate: number;\n  status: string; // \"pending\", \"completed\", \"overdue\"\n}\n\ninterface TaskState {\n  tasks: Task[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: TaskState = {\n  tasks: [],\n  loading: false,\n  error: null,\n};\n\nexport const taskSlice = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    setTasks(state, action: PayloadAction<Task[]>) {\n      state.tasks = action.payload;\n    },\n    addTask(state, action: PayloadAction<Task>) {\n      state.tasks.push(action.payload);\n    },\n    updateTask(state, action: PayloadAction<Task>) {\n      const index = state.tasks.findIndex(\n        (task) => task._id === action.payload._id\n      );\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n    },\n    deleteTask(state, action: PayloadAction<string>) {\n      state.tasks = state.tasks.filter((task) => task._id !== action.payload);\n    },\n    updateTaskStatus(\n      state,\n      action: PayloadAction<{ _id: string; status: string }>\n    ) {\n      const index = state.tasks.findIndex(\n        (task) => task._id === action.payload._id\n      );\n      if (index !== -1) {\n        state.tasks[index].status = action.payload.status;\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addMatcher(\n      api.endpoints.getTasks.matchFulfilled,\n      (state, action) => {\n        state.tasks = action.payload.data;\n        state.loading = false;\n      }\n    );\n    builder.addMatcher(api.endpoints.getTasks.matchPending, (state) => {\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addMatcher(\n      api.endpoints.getTasks.matchRejected,\n      (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || \"Failed to fetch tasks\";\n      }\n    );\n  },\n});\n\nexport const { setTasks, addTask, updateTask, deleteTask, updateTaskStatus } =\n  taskSlice.actions;\n\nexport default taskSlice.reducer;\n"],"names":[],"mappings":";;;;;;;;;AACA;AADA;;;AAkBA,MAAM,eAA0B;IAC9B,OAAO,EAAE;IACT,SAAS;IACT,OAAO;AACT;AAEO,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IACnC,MAAM;IACN;IACA,UAAU;QACR,UAAS,KAAK,EAAE,MAA6B;YAC3C,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B;QACA,SAAQ,KAAK,EAAE,MAA2B;YACxC,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,OAAO;QACjC;QACA,YAAW,KAAK,EAAE,MAA2B;YAC3C,MAAM,QAAQ,MAAM,KAAK,CAAC,SAAS,CACjC,CAAC,OAAS,KAAK,GAAG,KAAK,OAAO,OAAO,CAAC,GAAG;YAE3C,IAAI,UAAU,CAAC,GAAG;gBAChB,MAAM,KAAK,CAAC,MAAM,GAAG,OAAO,OAAO;YACrC;QACF;QACA,YAAW,KAAK,EAAE,MAA6B;YAC7C,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAS,KAAK,GAAG,KAAK,OAAO,OAAO;QACxE;QACA,kBACE,KAAK,EACL,MAAsD;YAEtD,MAAM,QAAQ,MAAM,KAAK,CAAC,SAAS,CACjC,CAAC,OAAS,KAAK,GAAG,KAAK,OAAO,OAAO,CAAC,GAAG;YAE3C,IAAI,UAAU,CAAC,GAAG;gBAChB,MAAM,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,OAAO,OAAO,CAAC,MAAM;YACnD;QACF;IACF;IACA,eAAe,CAAC;QACd,QAAQ,UAAU,CAChB,0IAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,EACrC,CAAC,OAAO;YACN,MAAM,KAAK,GAAG,OAAO,OAAO,CAAC,IAAI;YACjC,MAAM,OAAO,GAAG;QAClB;QAEF,QAAQ,UAAU,CAAC,0IAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;YACvD,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB;QACA,QAAQ,UAAU,CAChB,0IAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,EACpC,CAAC,OAAO;YACN,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO,IAAI;QACxC;IAEJ;AACF;AAEO,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,gBAAgB,EAAE,GAC1E,UAAU,OAAO;uCAEJ,UAAU,OAAO"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/components/common/task-card.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  updateTask,\n  updateTaskStatus,\n  deleteTask,\n} from \"@/services/store/modules/taskSlice\"; // Import actions\n\ninterface TaskCardProps {\n  task: {\n    _id: string;\n    userId: string;\n    title: string;\n    description: string;\n    dueDate: number;\n    status: string; // \"pending\", \"completed\", \"overdue\"\n  };\n  onUpdate: (id: string, updates: Partial<any>) => void;\n\n  onDelete: (id: string) => void;\n}\n\nconst TaskCard = ({ task }: TaskCardProps) => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(task.title);\n  const [description, setDescription] = useState(task.description);\n  const [dueDate, setDueDate] = useState(task.dueDate);\n\n  const handleStatusUpdate = () => {\n    const newStatus =\n      task.status === \"pending\"\n        ? \"completed\"\n        : task.status === \"completed\"\n        ? \"overdue\"\n        : \"pending\";\n    dispatch(updateTaskStatus({ _id: task._id, status: newStatus }));\n  };\n\n  const handleUpdate = () => {\n    dispatch(\n      updateTask({\n        _id: task._id,\n        title,\n        description,\n        dueDate,\n        userId: task.userId,\n        status: task.status,\n      })\n    );\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteTask(task._id)); // Dispatch delete action\n  };\n\n  return (\n    <div className=\"w-full max-w-md p-6 space-y-6 bg-white rounded-lg shadow-md\">\n      <h3 className=\"text-2xl font-semibold text-center text-gray-800 mb-6\">\n        Task: {title}\n      </h3>\n\n      <div className=\"space-y-4\">\n        <div>\n          <label\n            htmlFor=\"title\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Title\n          </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            className=\"w-full px-4 py-2 mt-1 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n            placeholder=\"Enter task title\"\n            required\n          />\n        </div>\n\n        <div>\n          <label\n            htmlFor=\"description\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Description\n          </label>\n          <textarea\n            id=\"description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            className=\"w-full px-4 py-2 mt-1 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n            placeholder=\"Enter task description\"\n            rows={4}\n            required\n          />\n        </div>\n\n        <div>\n          <label\n            htmlFor=\"dueDate\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Due Date\n          </label>\n          <input\n            id=\"dueDate\"\n            type=\"date\"\n            value={new Date(dueDate).toISOString().split(\"T\")[0]}\n            onChange={(e) => setDueDate(new Date(e.target.value).getTime())}\n            className=\"w-full px-4 py-2 mt-1 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"flex justify-between mt-6\">\n        {/* Status Update Button */}\n        <button\n          onClick={handleStatusUpdate}\n          className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg shadow-sm hover:bg-indigo-500 focus:ring-2 focus:ring-indigo-300\"\n        >\n          {task.status === \"pending\"\n            ? \"Mark as Completed\"\n            : task.status === \"completed\"\n            ? \"Move to Overdue\"\n            : \"Move to Pending\"}\n        </button>\n\n        {/* Update Task Button */}\n        <button\n          onClick={handleUpdate}\n          className=\"px-4 py-2 bg-green-600 text-white rounded-lg shadow-sm hover:bg-green-500 focus:ring-2 focus:ring-green-300\"\n        >\n          Update Task\n        </button>\n\n        {/* Delete Task Button */}\n        <button\n          onClick={handleDelete}\n          className=\"px-4 py-2 bg-red-600 text-white rounded-lg shadow-sm hover:bg-red-500 focus:ring-2 focus:ring-red-300\"\n        >\n          Delete Task\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskCard;\n"],"names":[],"mappings":";;;;AAAA;AAEA,yPAI6C,iBAAiB;AAL9D;;;;;AAqBA,MAAM,WAAW,CAAC,EAAE,IAAI,EAAiB;IACvC,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,KAAK;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,WAAW;IAC/D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,OAAO;IAEnD,MAAM,qBAAqB;QACzB,MAAM,YACJ,KAAK,MAAM,KAAK,YACZ,cACA,KAAK,MAAM,KAAK,cAChB,YACA;QACN,SAAS,CAAA,GAAA,gJAAA,CAAA,mBAAgB,AAAD,EAAE;YAAE,KAAK,KAAK,GAAG;YAAE,QAAQ;QAAU;IAC/D;IAEA,MAAM,eAAe;QACnB,SACE,CAAA,GAAA,gJAAA,CAAA,aAAU,AAAD,EAAE;YACT,KAAK,KAAK,GAAG;YACb;YACA;YACA;YACA,QAAQ,KAAK,MAAM;YACnB,QAAQ,KAAK,MAAM;QACrB;IAEJ;IAEA,MAAM,eAAe;QACnB,SAAS,CAAA,GAAA,gJAAA,CAAA,aAAU,AAAD,EAAE,KAAK,GAAG,IAAI,yBAAyB;IAC3D;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;;oBAAwD;oBAC7D;;;;;;;0BAGT,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCACC,SAAQ;gCACR,WAAU;0CACX;;;;;;0CAGD,8OAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gCACxC,WAAU;gCACV,aAAY;gCACZ,QAAQ;;;;;;;;;;;;kCAIZ,8OAAC;;0CACC,8OAAC;gCACC,SAAQ;gCACR,WAAU;0CACX;;;;;;0CAGD,8OAAC;gCACC,IAAG;gCACH,OAAO;gCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;gCAC9C,WAAU;gCACV,aAAY;gCACZ,MAAM;gCACN,QAAQ;;;;;;;;;;;;kCAIZ,8OAAC;;0CACC,8OAAC;gCACC,SAAQ;gCACR,WAAU;0CACX;;;;;;0CAGD,8OAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO,IAAI,KAAK,SAAS,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;gCACpD,UAAU,CAAC,IAAM,WAAW,IAAI,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO;gCAC5D,WAAU;gCACV,QAAQ;;;;;;;;;;;;;;;;;;0BAKd,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBACC,SAAS;wBACT,WAAU;kCAET,KAAK,MAAM,KAAK,YACb,sBACA,KAAK,MAAM,KAAK,cAChB,oBACA;;;;;;kCAIN,8OAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;kCAKD,8OAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT;uCAEe"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///media/abdullahwins/Code/AbdullahWins/next-todo-frontend/src/app/tasks/page.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  useUpdateTaskMutation,\n  useDeleteTaskMutation,\n  useGetTasksQuery,\n} from \"@/services/store/modules/api\";\nimport TaskCard from \"@/components/common/task-card\";\n\nexport default function Tasks() {\n  // Fetch tasks from the backend\n  const { data: tasks, isLoading, error } = useGetTasksQuery({});\n  const [updateTask] = useUpdateTaskMutation();\n  const [deleteTask] = useDeleteTaskMutation();\n\n  const handleUpdateTask = (id: string, updates: Partial<any>) => {\n    // Prepare the task data as FormData for sending to the backend\n    const formData = new FormData();\n    formData.append(\"data\", JSON.stringify({ _id: id, ...updates }));\n\n    // Call the mutation to update the task\n    updateTask(formData).catch((err) => {\n      console.error(\"Error updating task:\", err);\n    });\n  };\n\n  const handleDeleteTask = (id: string) => {\n    deleteTask(id).catch((err) => {\n      console.error(\"Error deleting task:\", err);\n    });\n  };\n\n  // Filter tasks by status\n  interface Task {\n    _id: string;\n    userId: string;\n    title: string;\n    description: string;\n    dueDate: number;\n    status: \"pending\" | \"completed\" | \"overdue\";\n    [key: string]: any;\n  }\n\n  interface TasksResponse {\n    data: Task[];\n  }\n\n  const pendingTasks = tasks?.data?.filter(\n    (task: Task) => task.status === \"pending\"\n  );\n  const completedTasks: Task[] = tasks?.data?.filter(\n    (task: Task) => task.status === \"completed\"\n  );\n  const overdueTasks: Task[] = tasks?.data?.filter(\n    (task: Task) => task.status === \"overdue\"\n  );\n\n  if (isLoading) {\n    return <p>Loading tasks...</p>;\n  }\n\n  if (error) {\n    return (\n      <p>\n        Error loading tasks:{\" \"}\n        {error instanceof Error ? error.message : \"An unknown error occurred\"}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Pending Tasks */}\n      <div>\n        <h2 className=\"text-2xl font-semibold\">Pending Tasks</h2>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {pendingTasks?.map((task: Task) => (\n            <TaskCard\n              key={task._id}\n              task={task}\n              onUpdate={handleUpdateTask}\n              onDelete={handleDeleteTask}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Completed Tasks */}\n      <div>\n        <h2 className=\"text-2xl font-semibold\">Completed Tasks</h2>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {completedTasks?.map((task) => (\n            <TaskCard\n              key={task._id}\n              task={task}\n              onUpdate={handleUpdateTask}\n              onDelete={handleDeleteTask}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Overdue Tasks */}\n      <div>\n        <h2 className=\"text-2xl font-semibold\">Overdue Tasks</h2>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {overdueTasks?.map((task) => (\n            <TaskCard\n              key={task._id}\n              task={task}\n              onUpdate={handleUpdateTask}\n              onDelete={handleDeleteTask}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAKA;AAPA;;;;AASe,SAAS;IACtB,+BAA+B;IAC/B,MAAM,EAAE,MAAM,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,0IAAA,CAAA,mBAAgB,AAAD,EAAE,CAAC;IAC5D,MAAM,CAAC,WAAW,GAAG,CAAA,GAAA,0IAAA,CAAA,wBAAqB,AAAD;IACzC,MAAM,CAAC,WAAW,GAAG,CAAA,GAAA,0IAAA,CAAA,wBAAqB,AAAD;IAEzC,MAAM,mBAAmB,CAAC,IAAY;QACpC,+DAA+D;QAC/D,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ,KAAK,SAAS,CAAC;YAAE,KAAK;YAAI,GAAG,OAAO;QAAC;QAE7D,uCAAuC;QACvC,WAAW,UAAU,KAAK,CAAC,CAAC;YAC1B,QAAQ,KAAK,CAAC,wBAAwB;QACxC;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,WAAW,IAAI,KAAK,CAAC,CAAC;YACpB,QAAQ,KAAK,CAAC,wBAAwB;QACxC;IACF;IAiBA,MAAM,eAAe,OAAO,MAAM,OAChC,CAAC,OAAe,KAAK,MAAM,KAAK;IAElC,MAAM,iBAAyB,OAAO,MAAM,OAC1C,CAAC,OAAe,KAAK,MAAM,KAAK;IAElC,MAAM,eAAuB,OAAO,MAAM,OACxC,CAAC,OAAe,KAAK,MAAM,KAAK;IAGlC,IAAI,WAAW;QACb,qBAAO,8OAAC;sBAAE;;;;;;IACZ;IAEA,IAAI,OAAO;QACT,qBACE,8OAAC;;gBAAE;gBACoB;gBACpB,iBAAiB,QAAQ,MAAM,OAAO,GAAG;;;;;;;IAGhD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAyB;;;;;;kCACvC,8OAAC;wBAAI,WAAU;kCACZ,cAAc,IAAI,CAAC,qBAClB,8OAAC,4IAAA,CAAA,UAAQ;gCAEP,MAAM;gCACN,UAAU;gCACV,UAAU;+BAHL,KAAK,GAAG;;;;;;;;;;;;;;;;0BAUrB,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAyB;;;;;;kCACvC,8OAAC;wBAAI,WAAU;kCACZ,gBAAgB,IAAI,CAAC,qBACpB,8OAAC,4IAAA,CAAA,UAAQ;gCAEP,MAAM;gCACN,UAAU;gCACV,UAAU;+BAHL,KAAK,GAAG;;;;;;;;;;;;;;;;0BAUrB,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAyB;;;;;;kCACvC,8OAAC;wBAAI,WAAU;kCACZ,cAAc,IAAI,CAAC,qBAClB,8OAAC,4IAAA,CAAA,UAAQ;gCAEP,MAAM;gCACN,UAAU;gCACV,UAAU;+BAHL,KAAK,GAAG;;;;;;;;;;;;;;;;;;;;;;AAU3B"}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}